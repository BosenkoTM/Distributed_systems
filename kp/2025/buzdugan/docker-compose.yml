version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: privacy_proxy_postgres
    environment:
      POSTGRES_DB: privacy_proxy
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/sample_data.sql:/docker-entrypoint-initdb.d/sample_data.sql
    networks:
      - privacy_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d privacy_proxy"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: privacy_proxy_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - privacy_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: privacy_proxy_backend
    environment:
      - DATABASE_URL=postgresql://admin:secure_password_123@postgres:5432/privacy_proxy
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - privacy_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: privacy_proxy_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - privacy_network

  nginx:
    image: nginx:alpine
    container_name: privacy_proxy_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - privacy_network

volumes:
  postgres_data:
  redis_data:

networks:
  privacy_network:
    driver: bridge
