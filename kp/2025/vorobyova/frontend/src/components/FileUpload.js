import React, { useState, useCallback } from 'react';
import { useDropzone } from 'react-dropzone';
import { toast } from 'react-toastify';
import axios from 'axios';

function FileUpload({ onTaskCreated, onTaskUpdated }) {
  const [uploading, setUploading] = useState(false);
  const [settings, setSettings] = useState({
    target_level: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏',
    augment: false,
    aug_factor: 1
  });

  const onDrop = useCallback(async (acceptedFiles) => {
    const file = acceptedFiles[0];
    if (!file) return;

    // Validate file type
    if (!file.name.endsWith('.xlsx') && !file.name.endsWith('.csv')) {
      toast.error('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã .xlsx –∏ .csv');
      return;
    }

    setUploading(true);

    try {
      const formData = new FormData();
      formData.append('file', file);
      formData.append('target_level', settings.target_level);
      formData.append('augment', settings.augment);
      formData.append('aug_factor', settings.aug_factor);

      const response = await axios.post('http://localhost:8002/upload', formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });

      onTaskCreated(response.data);
      toast.success('–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ! –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞—Ç–∞.');
    } catch (error) {
      console.error('Upload error:', error);
      toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: ' + (error.response?.data?.detail || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    } finally {
      setUploading(false);
    }
  }, [settings, onTaskCreated]);

  const { getRootProps, getInputProps, isDragActive } = useDropzone({
    onDrop,
    accept: {
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],
      'text/csv': ['.csv']
    },
    multiple: false,
    disabled: uploading
  });

  const handleSettingChange = (key, value) => {
    setSettings(prev => ({
      ...prev,
      [key]: value
    }));
  };

  return (
    <div>
      <h3>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞</h3>
      
      {/* Settings */}
      <div style={{ marginBottom: '30px' }}>
        <h4>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏</h4>
        
        <div className="form-group">
          <label className="form-label">–¶–µ–ª–µ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:</label>
          <select
            className="form-control"
            value={settings.target_level}
            onChange={(e) => handleSettingChange('target_level', e.target.value)}
          >
            <option value="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</option>
            <option value="Beginner">Beginner</option>
            <option value="Intermediate">Intermediate</option>
            <option value="Advanced">Advanced</option>
            <option value="Expert">Expert</option>
          </select>
        </div>

        <div className="form-group">
          <div className="checkbox-group">
            <input
              type="checkbox"
              id="augment"
              checked={settings.augment}
              onChange={(e) => handleSettingChange('augment', e.target.checked)}
            />
            <label htmlFor="augment">–í–∫–ª—é—á–∏—Ç—å –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏—é</label>
          </div>
        </div>

        {settings.augment && (
          <div className="form-group">
            <label className="form-label">
              –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏—è: {settings.aug_factor}x
            </label>
            <input
              type="range"
              min="1"
              max="5"
              value={settings.aug_factor}
              onChange={(e) => handleSettingChange('aug_factor', parseInt(e.target.value))}
              className="slider"
            />
            <div className="slider-label">
              –£–≤–µ–ª–∏—á–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ {settings.aug_factor} —Ä–∞–∑
            </div>
          </div>
        )}
      </div>

      {/* Upload Area */}
      <div
        {...getRootProps()}
        className={`upload-area ${isDragActive ? 'dragover' : ''}`}
        style={{ opacity: uploading ? 0.6 : 1, cursor: uploading ? 'not-allowed' : 'pointer' }}
      >
        <input {...getInputProps()} />
        <div className="upload-icon">üìÅ</div>
        <div className="upload-text">
          {isDragActive
            ? '–û—Ç–ø—É—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –∑–¥–µ—Å—å...'
            : '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞'
          }
        </div>
        <div className="upload-hint">
          –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã .xlsx –∏ .csv
        </div>
        {uploading && (
          <div style={{ marginTop: '20px' }}>
            <div className="spinner"></div>
            <div>–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞...</div>
          </div>
        )}
      </div>

      {/* File Format Info */}
      <div className="card" style={{ marginTop: '20px', backgroundColor: '#f8f9fa' }}>
        <h4>–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞</h4>
        <p>–§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏:</p>
        <ul>
          <li><strong>id</strong> - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏</li>
          <li><strong>domain</strong> - –¥–æ–º–µ–Ω –∑–∞–¥–∞—á–∏</li>
          <li><strong>sql_complexity</strong> - —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (Beginner, Intermediate, Advanced, Expert)</li>
          <li><strong>sql_prompt</strong> - –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ</li>
          <li><strong>sql</strong> - SQL –∑–∞–ø—Ä–æ—Å</li>
          <li><strong>sql_explanation</strong> - –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ SQL –∑–∞–ø—Ä–æ—Å–∞</li>
          <li><strong>sql_context</strong> - –∫–æ–Ω—Ç–µ–∫—Å—Ç (—Å—Ö–µ–º–∞ –ë–î)</li>
        </ul>
        <p><em>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏ —Å –≤–∞—Ä–∏–∞—Ü–∏—è–º–∏ –¥–ª—è –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏–∏: prompt_variation_1, sql_variation_1, –∏ —Ç.–¥.</em></p>
      </div>
    </div>
  );
}

export default FileUpload;
